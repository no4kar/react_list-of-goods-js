{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_BY_ALPHABET","SORT_BY_LENGTH","App","useState","sortBy","setSortBy","isSortRevers","setIsSortRevers","visibleGoods","goods","preparedGoods","sort","a","b","localeCompare","length","reverse","getPreparedGoods","className","type","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"iOAIaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAmB,WACnBC,EAAiB,SAyBhB,IAAMC,EAAM,WACjB,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAwCF,oBAAS,GAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KAsBMC,EA/CR,SACEC,EADF,GAIG,IAAD,IAFEL,cAEF,MAFWJ,EAEX,MADEM,oBACF,SACII,EAAa,YAAOD,GAExB,OAAQL,GACN,KAAKJ,EACHU,EAAgBA,EAAcC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAC7D,MAEF,KAAKZ,EACHS,EAAgBA,EAAcC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEG,OAASF,EAAEE,UAO9D,OAAOT,EAAeI,EAAcM,UAAYN,EA2B3BO,CAAiBlB,EACpC,CAAEK,SAAQE,iBAMZ,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,oCACPd,IAAWJ,GAAoB,YACjCoB,QAnCsB,WAC5Bf,EAAUD,IAAWJ,EACjB,GACAA,IA4BA,iCASA,wBACEmB,KAAK,SACLD,UAAS,uCACPd,IAAWH,GAAkB,YAC/BmB,QAtCoB,WAC1Bf,EAAUD,IAAWH,EACjB,GACAA,IA+BA,4BASA,wBACEkB,KAAK,SACLD,UAAS,wCACU,IAAjBZ,GAA0B,YAC5Bc,QAzCkB,WACxBb,GAAiC,IAAjBD,IAoCZ,sBASa,KAAXF,IAAkC,IAAjBE,IAEjB,wBACEa,KAAK,SACLD,UAAU,4BACVE,QA/Ce,WACvBf,EAAU,IACVE,GAAgB,IA0CV,sBAUJ,6BACGC,EAAaa,KAAI,SAAAC,GAAI,OACpB,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,YCnHnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.04cbda7a.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_BY_ALPHABET = 'alphabet';\nconst SORT_BY_LENGTH = 'length';\n\nfunction getPreparedGoods(\n  goods,\n  { sortBy = SORT_BY_ALPHABET,\n    isSortRevers = false },\n) {\n  let preparedGoods = [...goods];\n\n  switch (sortBy) {\n    case SORT_BY_ALPHABET:\n      preparedGoods = preparedGoods.sort((a, b) => a.localeCompare(b));\n      break;\n\n    case SORT_BY_LENGTH:\n      preparedGoods = preparedGoods.sort((a, b) => a.length - b.length);\n      break;\n\n    default:\n      break;\n  }\n\n  return isSortRevers ? preparedGoods.reverse() : preparedGoods;\n}\n\nexport const App = () => {\n  const [sortBy, setSortBy] = useState('');\n  const [isSortRevers, setIsSortRevers] = useState(false);\n  const handlerSortByAlphabet = () => {\n    setSortBy(sortBy === SORT_BY_ALPHABET\n      ? ''\n      : SORT_BY_ALPHABET);\n  };\n\n  const handlerSortByLength = () => {\n    setSortBy(sortBy === SORT_BY_LENGTH\n      ? ''\n      : SORT_BY_LENGTH);\n  };\n\n  const handlerSortRevers = () => {\n    setIsSortRevers(isSortRevers === false);\n  };\n\n  const handlerSortReset = () => {\n    setSortBy('');\n    setIsSortRevers(false);\n  };\n\n  const visibleGoods = getPreparedGoods(goodsFromServer,\n    { sortBy, isSortRevers });\n\n  // console.log(`\\n\\tsortBy = ${sortBy}`,\n  //   `\\n\\tisSortRevers = ${isSortRevers}`,\n  //   `\\n\\tvisibleGoods = ${visibleGoods}`);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-info\n          ${sortBy !== SORT_BY_ALPHABET && 'is-light'}`}\n          onClick={handlerSortByAlphabet}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-success\n          ${sortBy !== SORT_BY_LENGTH && 'is-light'}`}\n          onClick={handlerSortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-warning\n          ${isSortRevers === false && 'is-light'}`}\n          onClick={handlerSortRevers}\n        >\n          Reverse\n        </button>\n\n        {(sortBy !== '' || isSortRevers === true)\n          && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={handlerSortReset}\n          >\n            Reset\n          </button>\n          )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li key={good} data-cy=\"Good\">{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}